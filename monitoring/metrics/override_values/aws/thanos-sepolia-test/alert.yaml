alertmanager:
  config:
    global:
      # Also possible to place this URL in a file.
      # Ex: `slack_api_url_file: '/etc/alertmanager/slack_url'`
      slack_api_url: 'https://hooks.slack.com/services/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'

    route:
      receiver: no-alert
      routes:
        - matchers:
            - group = tokamak
            - severity_resolved = info
          receiver: slack-notifications-resolve
          group_by: ['alertname']
          group_wait: 0s
          group_interval: 10s
          repeat_interval: 1h
        - matchers:
            - group = tokamak
          receiver: slack-notifications
          group_by: ['alertname']
          group_wait: 0s
          group_interval: 10s
          repeat_interval: 1h

    receivers:
      - name: no-alert
      - name: slack-notifications
        slack_configs:
          - channel: 'thanos-testnet-status'
            title: "{{ range .Alerts }}[Thanos Sepolia Test] {{ .Labels.app }}\n{{ end }}"
            text: "{{ range .Alerts }}[{{ .Labels.severity }}] {{ .Annotations.message }}\n{{ end }}"
      - name: slack-notifications-resolve
        slack_configs:
          - channel: 'thanos-testnet-status'
            send_resolved: true
            title: "{{ range .Alerts }}[Thanos Sepolia Test] {{ .Labels.app }}\n{{ end }}"
            text: "{{ range .Alerts }}{{ if eq .Status \"firing\" }}[{{ .Labels.severity }}] {{ .Annotations.message }} {{ else }}[{{ .Labels.severity_resolved }}] {{ .Annotations.message_resolved }} {{ end }}\n{{ end }}"

additionalPrometheusRulesMap:
  rule-name:
    groups:
      - name: 'op-geth'
        rules:
          - alert: 'op-geth down'
            labels:
              group: tokamak
              app: op-geth
              severity: critical
              severity_resolved: info
            expr: 'absent(up{job="op-geth"} == 1)'
            annotations:
              message: 'op-geth is down'
              message_resolved: 'op-geth is up'
      - name: 'op-node'
        rules:
          - alert: 'op-node down'
            labels:
              group: tokamak
              app: op-node
              severity: critical
              severity_resolved: info
            expr: 'absent(up{job="op-node"} == 1)'
            annotations:
              message: 'op-node is down'
              message_resolved: 'op-node is up'
      - name: 'op-batcher'
        rules:
          - alert: 'op-batcher down'
            labels:
              group: tokamak
              app: op-batcher
              severity: critical
              severity_resolved: info
            expr: 'absent(up{job="op-batcher"} == 1)'
            annotations:
              message: 'op-batcher is down'
              message_resolved: 'op-batcher is up'
      - name: 'op-proposer'
        rules:
          - alert: 'op-proposer down'
            labels:
              group: tokamak
              app: op-proposer
              severity: critical
              severity_resolved: info
            expr: 'absent(up{job="op-proposer"} == 1)'
            annotations:
              message: 'op-proposer is down'
              message_resolved: 'op-proposer is up'
      - name: 'proxyd down'
        rules:
          - alert: 'proxyd down'
            labels:
              group: tokamak
              app: proxyd
              severity: critical
              severity_resolved: info
            expr: 'absent(up{job="proxyd"} == 1)'
            annotations:
              message: 'proxyd is down'
              message_resolved: 'proxyd is up'
      - name: 'proxyd unhealthy'
        rules:
          - alert: 'proxyd unhealthy'
            labels:
              group: tokamak
              app: proxyd
              severity: critical
              severity_resolved: info
            expr: 'absent(probe_success{job="blackbox-eth-block-number", target="http://proxyd-svc.thanos:8545"} == 1)'
            annotations:
              message: 'proxyd is unhealthy'
              message_resolved: 'proxyd is healthy'
      - name: 'office l1'
        rules:
          - alert: 'office l1 unhealthy'
            for: 1m
            labels:
              group: tokamak
              app: l1
              severity: critical
              severity_resolved: info
            expr: 'absent(probe_success{job="blackbox-eth-block-number", target="https://sepolia.rpc.tokamak.network"} == 1)'
            annotations:
              message: 'office l1 unhealthy'
              message_resolved: 'office l1 is healthy'
      - name: 'blockscout'
        rules:
          - alert: 'blockscout'
            labels:
              group: tokamak
              app: blockscout
              severity: critical
              severity_resolved: info
            expr: 'absent(up{job="blockscout"} == 1)'
            annotations:
              message: 'blockscout is down'
              message_resolved: 'blockscout is up'
      - name: 'redis unhealthy'
        rules:
          - alert: 'redis unhealthy'
            labels:
              group: tokamak
              app: redis
              severity: critical
              severity_resolved: info
            expr: 'absent(probe_success{target="redis-svc.redis:6379"} == 1)'
            annotations:
              message: 'redis is unhealthy'
              message_resolved: 'redis is healthy'
      - name: 'BatcherBalance'
        rules:
          - alert: 'BatcherBalance'
            labels:
              group: tokamak
              app: op-batcher
              severity: warning
            expr: 'op_batcher_default_balance < 0.2'
            for: 5m
            annotations:
              message: "Batcher balance is lower than 0.2 ether\nbatcher balance: {{ $value | printf \"%.2f\" }} eth"
      - name: 'BatchSubmitStuck'
        rules:
          - alert: 'BatchSubmitStuck'
            labels:
              group: tokamak
              app: op-batcher
              severity: critical
              severity_resolved: info
            expr: 'op_batcher_default_batcher_tx_total <= op_batcher_default_batcher_tx_total offset 6m'
            for: 6m
            annotations:
              message: "Batch submit is stuck\nLatest submitted timestamp: {{ \"op_batcher_default_last_batcher_tx_unix{stage='submitted'}\" | query | first | value | printf \"%.0f\" }}"
              message_resolved: "Resolved batch submit"
      - name: 'BlockPending'
        rules:
          - alert: 'BlockPending'
            labels:
              group: tokamak
              app: op-batcher
              severity: warning
              severity_resolved: info
            expr: 'sum by () (op_batcher_default_pending_blocks_count{stage=~"added|closed"}) > 0'
            for: 12m
            annotations:
              message: "Pending Block occurred during channel building"
              message_resolved: "Pending Block resolved"
      - name: 'OpGethBusy'
        rules:
          - alert: 'OpGethRequestSlow'
            labels:
              group: tokamak
              app: op-node
              severity: warning
            expr: histogram_quantile(0.9, sum by (le) (rate(op_node_default_rpc_client_request_duration_seconds_bucket{method=~"engine_forkchoiceUpdatedV2|engine_getPayloadV2|engine_newPayloadV2"}[10m]))) > 0.5
            for: 5m
            annotations:
              message: "op-geth is busy now, block creation can be slow\nreponse time: {{ $value | printf \"%.2f\"}}s"
      - name: 'L1RPCBusy'
        rules:
          - alert: 'L1RPCRequestSlow'
            labels:
              group: tokamak
              app: op-node
              severity: warning
            expr: 'histogram_quantile(0.9, sum by (le) (rate(op_node_default_rpc_client_request_duration_seconds_bucket{method=~"eth_getBlockByHash|eth_getBlockReceipts|eth_getBlockByNumber"}[10m]))) > 0.5'
            for: 5m
            annotations:
              message: "L1 RPC is busy now\nresponse time: {{ $value | printf \"%.2f\" }}s"
      - name: 'OpGethResponseErr'
        rules:
          - alert: 'OpGethResponseErr'
            labels:
              group: tokamak
              app: op-node
              severity: warning
            expr: 'sum by (error) (rate(op_node_default_rpc_client_responses_total{error!="<nil>", method=~"engine_forkchoiceUpdatedV2|engine_getPayloadV2|engine_newPayloadV2"}[5m])) > 0'
            for: 5m
            annotations:
              message: "L1 RPC Response error"
      - name: 'L1RPCResponseErr'
        rules:
          - alert: 'L1RPCResponseErr'
            labels:
              group: tokamak
              app: op-node
              severity: warning
            expr: 'sum by (error) (rate(op_node_default_rpc_client_responses_total{error!="<nil>", method=~"eth_getBlockByHash|eth_getBlockReceipts|eth_getBlockByNumber"}[5m])) > 0'
            for: 5m
            annotations:
              message: "L1 RPC Response error"
      - name: 'ReorgOccur'
        rules:
          - alert: 'ReorgOccur'
            labels:
              group: tokamak
              app: op-node
              severity: warning
            expr: 'rate(op_node_default_l1_reorg_depth_bucket{le="1.5"}[1m]) > 0'
            annotations:
              message: "L1 chain reorg occoured"
      - name: 'BlockCreationStuck'
        rules:
          - alert: 'BlockCreationStuck'
            labels:
              group: tokamak
              app: op-node
              severity: critical
              severity_resolved: info
            expr: 'op_node_default_refs_number{layer="l2", type="l2_unsafe"} <= op_node_default_refs_number{layer="l2", type="l2_unsafe"} offset 1m'
            for: 1m
            annotations:
              message: "Block creation is stuck. unsafe block is not increase\nLatest L2 Block: {{ \"op_node_default_refs_number{layer='l2', type='l2_unsafe'}\" | query | first | value | printf \"%.0f\"  }}"
              message_resolved: "Block creation resolved\nLatest L2 Block: {{ \"op_node_default_refs_number{layer='l2', type='l2_unsafe'}\" | query | first | value | printf \"%.0f\"  }}"
      - name: 'ProposerBalance'
        rules:
          - alert: 'ProposerBalance'
            labels:
              group: tokamak
              app: op-proposer
              severity: warning
            expr: 'op_proposer_default_balance < 0.2'
            for: 5m
            annotations:
              message: "Proposer balance is lower than 0.2 ether\nbatcher balance: {{ $value | printf \"%.2f\"}} eth"
      - name: 'OutputRootProposeStuck'
        rules:
          - alert: 'OutputRootProposeStuck'
            labels:
              group: tokamak
              app: op-proposer
              severity: critical
              severity_resolved: info
            expr: 'op_proposer_default_refs_number{layer="l2", type="proposed"} - op_proposer_default_refs_number{layer="l2", type="proposed"} offset 6m < 30'
            for: 6m
            annotations:
              message: "OutputRoot propose is stuck\nLatest proposed outputRoot: {{ \"op_proposer_default_refs_number{layer='l2', type='proposed'}\" | query | first | value | printf \"%.0f\" }}"
              message_resolved: "OutputRoot propose resolved\nLatest proposed outputRoot: {{ \"op_proposer_default_refs_number{layer='l2', type='proposed'}\" | query | first | value | printf \"%.0f\" }}"