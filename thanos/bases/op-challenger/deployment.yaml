apiVersion: apps/v1
kind: Deployment
metadata:
  name: op-challenger
spec:
  selector:
    matchLabels:
      app: op-challenger
  replicas: 1
  template:
    spec:
      terminationGracePeriodSeconds: 10
      restartPolicy: Always
      initContainers:
        - name: wait-for-l1
          image: nicolaka/netshoot
          command: ["bash", "-c", "/wait-scripts/wait-for-l1.sh"]
          volumeMounts:
            - name: wait-scripts
              mountPath: /wait-scripts
          envFrom:
            - configMapRef:
                name: common
        - name: wait-for-l2
          image: nicolaka/netshoot
          command: ["bash", "-c", "/wait-scripts/wait-for-l2.sh"]
          volumeMounts:
            - name: wait-scripts
              mountPath: /wait-scripts
          envFrom:
            - configMapRef:
                name: common
        - name: wait-for-rollup
          image: nicolaka/netshoot
          command: ["bash", "-c", "/wait-scripts/wait-for-rollup.sh"]
          volumeMounts:
            - name: wait-scripts
              mountPath: /wait-scripts
          envFrom:
            - configMapRef:
                name: common
      containers:
        - name: challenger
          image: tokamaknetwork/thanos-op-challenger
          imagePullPolicy: IfNotPresent
          command:
            ["/bin/sh", "/op-challenger-scripts/entrypoint-op-challenger.sh"]
          envFrom:
            - configMapRef:
                name: op-challenger
            - secretRef:
                name: secret
          volumeMounts:
            - name: challenger-data
              mountPath: /db
            - name: op-challenger-scripts
              mountPath: /op-challenger-scripts
      volumes:
        - name: wait-scripts
          configMap:
            name: wait-scripts
            defaultMode: 0777
        - name: op-challenger-scripts
          configMap:
            name: op-challenger-scripts
        - name: challenger-data
          persistentVolumeClaim:
            claimName: op-challenger-pvc
