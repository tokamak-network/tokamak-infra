---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: graph-node-ingress-alb
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/conditions.auth: >
      [
        {
          "field": "http-header",
          "httpHeaderConfig": {
            "httpHeaderName": "Authorization",
            "values": ["Bearer dGl0YW4gaXMgdGhlIGJlc3QgbWFpbm5ldA=="]
          }
        }
      ]
    alb.ingress.kubernetes.io/actions.auth: >
      {
        "type": "forward",
        "forwardConfig": {
          "targetGroups": [
            {
              "serviceName": "graph-node-svc",
              "servicePort": "8020"
            }
          ]
        }
      }
spec:
  tls:
    - hosts:
        - thegraph.titan.tokamak.network
  rules:
    - host: thegraph.titan.tokamak.network
      http:
        paths:
          - path: /deploy
            pathType: Prefix
            backend:
              service:
                name: auth
                port:
                  name: use-annotation
          - path: /subgraphs
            pathType: Prefix
            backend:
              service:
                name: graph-node-svc
                port:
                  number: 8000
          - path: /graphql
            pathType: Prefix
            backend:
              service:
                name: graph-node-svc
                port:
                  number: 8030
          - path: /metrics
            pathType: Prefix
            backend:
              service:
                name: graph-node-svc
                port:
                  number: 8040

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ipfs-ingress-alb
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/conditions.auth: >
      [
        {
          "field": "http-header",
          "httpHeaderConfig": {
            "httpHeaderName": "Authorization",
            "values": ["Bearer dGl0YW4gaXMgdGhlIGJlc3QgbWFpbm5ldA=="]
          }
        }
      ]
    alb.ingress.kubernetes.io/actions.auth: >
      {
        "type": "forward",
        "forwardConfig": {
          "targetGroups": [
            {
              "serviceName": "ipfs-svc",
              "servicePort": "5001"
            }
          ]
        }
      }
spec:
  tls:
    - hosts:
        - ipfs.titan.tokamak.network
  rules:
    - host: ipfs.titan.tokamak.network
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: auth
                port:
                  name: use-annotation
