apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: op-geth-ingress-alb
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/group.name: op-geth
    alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=true,access_logs.s3.bucket=s3-alb-access-logs-lambda-thanos-sepolia,access_logs.s3.prefix=thanos-sepolia
    alb.ingress.kubernetes.io/wafv2-acl-arn: arn:aws:wafv2:ap-northeast-2:992382494724:regional/webacl/thanos-sepolia-block-ddos/3a0498c3-896f-49f5-908b-b9ba3fb88d0f
    alb.ingress.kubernetes.io/conditions.ws-rule: >
      [
        {
          "field": "http-header",
          "httpHeaderConfig": {
              "httpHeaderName": "Upgrade",
              "values": ["websocket"]
          }
        },
        {
          "field": "http-header",
          "httpHeaderConfig": {
            "httpHeaderName": "Connection",
            "values": ["Upgrade"]
          }
        }
      ]
    alb.ingress.kubernetes.io/actions.ws-rule: >
      {
        "type": "forward",
        "forwardConfig": {
          "targetGroups": [{
            "serviceName": "op-geth-svc",
            "servicePort": "8546"
          }]
        }
      }
spec:
  tls:
    - hosts:
        - rpc.thanos-sepolia.tokamak.network
  rules:
    - host: rpc.thanos-sepolia.tokamak.network
      http:
        paths:
          - path: /
            pathType: Exact
            backend:
              service:
                name: ws-rule
                port:
                  name: use-annotation
          - path: /
            pathType: Exact
            backend:
              service:
                name: proxyd-l2geth-svc
                port:
                  number: 8545
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: op-geth-ingress-alb-bad-request
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/group.name: op-geth
    alb.ingress.kubernetes.io/wafv2-acl-arn: arn:aws:wafv2:ap-northeast-2:992382494724:regional/webacl/thanos-sepolia-block-ddos/3a0498c3-896f-49f5-908b-b9ba3fb88d0f
    alb.ingress.kubernetes.io/actions.http-badrequest: >
      {
        "type": "fixed-response",
        "fixedResponseConfig": {
          "contentType": "application/json",
          "statusCode": "400",
          "messageBody": "{\"jsonrpc\": \"2.0\",\"error\": {\"code\": -32600,\"message\": \"HTTPS is required\"}}"
        }
      }
spec:
  rules:
    - host: rpc.thanos-sepolia.tokamak.network
      http:
        paths:
          - path: /
            pathType: Exact
            backend:
              service:
                name: http-badrequest
                port:
                  name: use-annotation
