apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: l2geth-ingress-alb
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:005310045109:certificate/c49d3b9b-6795-4cf3-820a-515f80d12ce2
    alb.ingress.kubernetes.io/conditions.ws-rule: >
      [
        {
          "field": "http-header",
          "httpHeaderConfig": {
              "httpHeaderName": "Upgrade",
              "values": ["websocket"]
          }
        },
        {
          "field": "http-header",
          "httpHeaderConfig": {
            "httpHeaderName": "Connection",
            "values": ["Upgrade"]
          }
        }
      ]
    alb.ingress.kubernetes.io/actions.ws-rule: >
      {
        "type": "forward",
        "forwardConfig": {
          "targetGroups": [{
            "serviceName": "proxyd-l2geth-svc",
            "servicePort": "8546"
          }]
        }
      }
spec:
  rules:
    - host: goerli.optimism.tokamak.network
      http:
        paths:
          - path: /
            pathType: Exact
            backend:
              service:
                name: ws-rule
                port:
                  name: use-annotation
          - path: /
            pathType: Exact
            backend:
              service:
                name: proxyd-l2geth-svc
                port:
                  number: 8545
    - host: rpc.titan-goerli.tokamak.network
      http:
        paths:
          - path: /
            pathType: Exact
            backend:
              service:
                name: ws-rule
                port:
                  name: use-annotation
          - path: /
            pathType: Exact
            backend:
              service:
                name: proxyd-l2geth-svc
                port:
                  number: 8545
